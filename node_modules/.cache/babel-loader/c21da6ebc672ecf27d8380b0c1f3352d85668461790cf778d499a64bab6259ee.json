{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aafi\\\\Desktop\\\\Voice Demo App\\\\frontEnd\\\\demo-voice-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [recordings, setRecordings] = useState([]);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n      mediaRecorderRef.current.start();\n    } catch (error) {\n      console.error('Failed to start recording:', error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n  };\n  const handleDataAvailable = event => {\n    if (event.data.size > 0) {\n      chunksRef.current.push(event.data);\n    }\n  };\n  const onSave = async () => {\n    try {\n      const blob = new Blob(chunksRef.current, {\n        type: 'audio/webm'\n      });\n      const formData = new FormData();\n      formData.append('recording', blob);\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setRecordings(prevRecordings => [response.data, ...prevRecordings]);\n      chunksRef.current = [];\n    } catch (error) {\n      console.error('Failed to save the recording:', error);\n    }\n  };\n  const fetchRecordings = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/recordings');\n      setRecordings(response.data);\n    } catch (error) {\n      console.error('Failed to fetch the recordings:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voice Recording Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchRecordings,\n      children: \"Fetch Recordings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recordings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recordings.map(recording => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: `http://localhost:5000/${recording.path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recording.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, recording._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Record:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      type: \"button\",\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      type: \"button\",\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSave,\n      type: \"button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VANBpT3BW9F7oz12pFCFfSv3nGc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","App","_s","recordings","setRecordings","mediaRecorderRef","chunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","addEventListener","handleDataAvailable","start","error","console","stopRecording","state","stop","event","data","size","push","onSave","blob","Blob","type","formData","FormData","append","response","post","headers","prevRecordings","fetchRecordings","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","recording","controls","src","path","filename","_id","_c","$RefreshReg$"],"sources":["C:/Users/Aafi/Desktop/Voice Demo App/frontEnd/demo-voice-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [recordings, setRecordings] = useState([]);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);\n      mediaRecorderRef.current.start();\n    } catch (error) {\n      console.error('Failed to start recording:', error);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n  };\n\n  const handleDataAvailable = (event) => {\n    if (event.data.size > 0) {\n      chunksRef.current.push(event.data);\n    }\n  };\n\n  const onSave = async () => {\n    try {\n      const blob = new Blob(chunksRef.current, { type: 'audio/webm' });\n      const formData = new FormData();\n      formData.append('recording', blob);\n\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n\n      setRecordings(prevRecordings => [response.data, ...prevRecordings]);\n      chunksRef.current = [];\n    } catch (error) {\n      console.error('Failed to save the recording:', error);\n    }\n  };\n\n  const fetchRecordings = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/recordings');\n      setRecordings(response.data);\n    } catch (error) {\n      console.error('Failed to fetch the recordings:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Voice Recording Demo</h1>\n\n      <button onClick={fetchRecordings}>Fetch Recordings</button>\n\n      <h2>Recordings:</h2>\n      <ul>\n        {recordings.map(recording => (\n          <li key={recording._id}>\n            <audio controls src={`http://localhost:5000/${recording.path}`} />\n            <p>{recording.filename}</p>\n          </li>\n        ))}\n      </ul>\n\n      <h2>Record:</h2>\n      <button onClick={startRecording} type=\"button\">Start</button>\n      <button onClick={stopRecording} type=\"button\">Stop</button>\n      <button onClick={onSave} type=\"button\">Save</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}